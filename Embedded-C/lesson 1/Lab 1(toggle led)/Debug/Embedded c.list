
Embedded c.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000178  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002a8  080002a8  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002a8  080002a8  00020008  2**0
                  CONTENTS
  4 .ARM          00000000  080002a8  080002a8  00020008  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002a8  080002a8  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002a8  080002a8  000102a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002ac  080002ac  000102ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000008  20000000  080002b0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000008  080002b8  00020008  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  080002b8  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020008  2**0
                  CONTENTS, READONLY
 12 .debug_info   000001da  00000000  00000000  00020031  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000000fd  00000000  00000000  0002020b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000048  00000000  00000000  00020308  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000030  00000000  00000000  00020350  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000f55  00000000  00000000  00020380  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000044c  00000000  00000000  000212d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00003bfa  00000000  00000000  00021721  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002531b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  00025398  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000008 	.word	0x20000008
 800014c:	00000000 	.word	0x00000000
 8000150:	08000290 	.word	0x08000290

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	2000000c 	.word	0x2000000c
 800016c:	08000290 	.word	0x08000290

08000170 <main>:
}CRH_REG;
volatile ODR_REG* ODR = (ODR_REG*) GPIOA_ODR ;
CRH_REG* CRH = (CRH_REG*) GPIOA_CRH;

int main(void)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
	APB2ENR_REG |= 1<<2;
 8000176:	4b1c      	ldr	r3, [pc, #112]	; (80001e8 <main+0x78>)
 8000178:	681b      	ldr	r3, [r3, #0]
 800017a:	4a1b      	ldr	r2, [pc, #108]	; (80001e8 <main+0x78>)
 800017c:	f043 0304 	orr.w	r3, r3, #4
 8000180:	6013      	str	r3, [r2, #0]
	//GPIOA_CRH &= 0xFF0FFFFF;
	//GPIOA_CRH |= 0x00200000;
	CRH->PINS.Pins = 2;
 8000182:	4b1a      	ldr	r3, [pc, #104]	; (80001ec <main+0x7c>)
 8000184:	681a      	ldr	r2, [r3, #0]
 8000186:	6813      	ldr	r3, [r2, #0]
 8000188:	2102      	movs	r1, #2
 800018a:	f361 5318 	bfi	r3, r1, #20, #5
 800018e:	6013      	str	r3, [r2, #0]
	while(1){
		ODR->Pin.P13 = 1;
 8000190:	4b17      	ldr	r3, [pc, #92]	; (80001f0 <main+0x80>)
 8000192:	681a      	ldr	r2, [r3, #0]
 8000194:	8813      	ldrh	r3, [r2, #0]
 8000196:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800019a:	8013      	strh	r3, [r2, #0]
		sint32 i = 0;
 800019c:	2300      	movs	r3, #0
 800019e:	607b      	str	r3, [r7, #4]
		for (i = 0 ; i < 5000 ; i++ ){
 80001a0:	2300      	movs	r3, #0
 80001a2:	607b      	str	r3, [r7, #4]
 80001a4:	e008      	b.n	80001b8 <main+0x48>
			ODR->Pin.P13 = 0;
 80001a6:	4b12      	ldr	r3, [pc, #72]	; (80001f0 <main+0x80>)
 80001a8:	681a      	ldr	r2, [r3, #0]
 80001aa:	8813      	ldrh	r3, [r2, #0]
 80001ac:	f36f 334d 	bfc	r3, #13, #1
 80001b0:	8013      	strh	r3, [r2, #0]
		for (i = 0 ; i < 5000 ; i++ ){
 80001b2:	687b      	ldr	r3, [r7, #4]
 80001b4:	3301      	adds	r3, #1
 80001b6:	607b      	str	r3, [r7, #4]
 80001b8:	687b      	ldr	r3, [r7, #4]
 80001ba:	f241 3287 	movw	r2, #4999	; 0x1387
 80001be:	4293      	cmp	r3, r2
 80001c0:	ddf1      	ble.n	80001a6 <main+0x36>
		}
		for (i = 0 ; i < 5000 ; i++ ){
 80001c2:	2300      	movs	r3, #0
 80001c4:	607b      	str	r3, [r7, #4]
 80001c6:	e008      	b.n	80001da <main+0x6a>
					ODR->Pin.P13 = 1;
 80001c8:	4b09      	ldr	r3, [pc, #36]	; (80001f0 <main+0x80>)
 80001ca:	681a      	ldr	r2, [r3, #0]
 80001cc:	8813      	ldrh	r3, [r2, #0]
 80001ce:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80001d2:	8013      	strh	r3, [r2, #0]
		for (i = 0 ; i < 5000 ; i++ ){
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	f241 3287 	movw	r2, #4999	; 0x1387
 80001e0:	4293      	cmp	r3, r2
 80001e2:	ddf1      	ble.n	80001c8 <main+0x58>
	while(1){
 80001e4:	e7d4      	b.n	8000190 <main+0x20>
 80001e6:	bf00      	nop
 80001e8:	40021018 	.word	0x40021018
 80001ec:	20000004 	.word	0x20000004
 80001f0:	20000000 	.word	0x20000000

080001f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001f4:	480d      	ldr	r0, [pc, #52]	; (800022c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001f6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80001f8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001fc:	480c      	ldr	r0, [pc, #48]	; (8000230 <LoopForever+0x6>)
  ldr r1, =_edata
 80001fe:	490d      	ldr	r1, [pc, #52]	; (8000234 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000200:	4a0d      	ldr	r2, [pc, #52]	; (8000238 <LoopForever+0xe>)
  movs r3, #0
 8000202:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000204:	e002      	b.n	800020c <LoopCopyDataInit>

08000206 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000206:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000208:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800020a:	3304      	adds	r3, #4

0800020c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800020c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800020e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000210:	d3f9      	bcc.n	8000206 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000212:	4a0a      	ldr	r2, [pc, #40]	; (800023c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000214:	4c0a      	ldr	r4, [pc, #40]	; (8000240 <LoopForever+0x16>)
  movs r3, #0
 8000216:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000218:	e001      	b.n	800021e <LoopFillZerobss>

0800021a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800021a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800021c:	3204      	adds	r2, #4

0800021e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800021e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000220:	d3fb      	bcc.n	800021a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000222:	f000 f811 	bl	8000248 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000226:	f7ff ffa3 	bl	8000170 <main>

0800022a <LoopForever>:

LoopForever:
    b LoopForever
 800022a:	e7fe      	b.n	800022a <LoopForever>
  ldr   r0, =_estack
 800022c:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000230:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000234:	20000008 	.word	0x20000008
  ldr r2, =_sidata
 8000238:	080002b0 	.word	0x080002b0
  ldr r2, =_sbss
 800023c:	20000008 	.word	0x20000008
  ldr r4, =_ebss
 8000240:	20000024 	.word	0x20000024

08000244 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000244:	e7fe      	b.n	8000244 <ADC1_2_IRQHandler>
	...

08000248 <__libc_init_array>:
 8000248:	b570      	push	{r4, r5, r6, lr}
 800024a:	2500      	movs	r5, #0
 800024c:	4e0c      	ldr	r6, [pc, #48]	; (8000280 <__libc_init_array+0x38>)
 800024e:	4c0d      	ldr	r4, [pc, #52]	; (8000284 <__libc_init_array+0x3c>)
 8000250:	1ba4      	subs	r4, r4, r6
 8000252:	10a4      	asrs	r4, r4, #2
 8000254:	42a5      	cmp	r5, r4
 8000256:	d109      	bne.n	800026c <__libc_init_array+0x24>
 8000258:	f000 f81a 	bl	8000290 <_init>
 800025c:	2500      	movs	r5, #0
 800025e:	4e0a      	ldr	r6, [pc, #40]	; (8000288 <__libc_init_array+0x40>)
 8000260:	4c0a      	ldr	r4, [pc, #40]	; (800028c <__libc_init_array+0x44>)
 8000262:	1ba4      	subs	r4, r4, r6
 8000264:	10a4      	asrs	r4, r4, #2
 8000266:	42a5      	cmp	r5, r4
 8000268:	d105      	bne.n	8000276 <__libc_init_array+0x2e>
 800026a:	bd70      	pop	{r4, r5, r6, pc}
 800026c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000270:	4798      	blx	r3
 8000272:	3501      	adds	r5, #1
 8000274:	e7ee      	b.n	8000254 <__libc_init_array+0xc>
 8000276:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800027a:	4798      	blx	r3
 800027c:	3501      	adds	r5, #1
 800027e:	e7f2      	b.n	8000266 <__libc_init_array+0x1e>
 8000280:	080002a8 	.word	0x080002a8
 8000284:	080002a8 	.word	0x080002a8
 8000288:	080002a8 	.word	0x080002a8
 800028c:	080002ac 	.word	0x080002ac

08000290 <_init>:
 8000290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000292:	bf00      	nop
 8000294:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000296:	bc08      	pop	{r3}
 8000298:	469e      	mov	lr, r3
 800029a:	4770      	bx	lr

0800029c <_fini>:
 800029c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800029e:	bf00      	nop
 80002a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002a2:	bc08      	pop	{r3}
 80002a4:	469e      	mov	lr, r3
 80002a6:	4770      	bx	lr
